[{"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\App.js":"2","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\MainComponent.js":"6","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"7","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"8","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"9","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"10","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\partners.js":"11","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\promotions.js":"12","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\comments.js":"13","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"14","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"15","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\forms.js":"17","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"18","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"19","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"20","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"21","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\partners.js":"22","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\campsites.js":"23","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\comments.js":"24","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\promotions.js":"25"},{"size":695,"mtime":1609547037467,"results":"26","hashOfConfig":"27"},{"size":548,"mtime":1610160862166,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608751580068,"results":"29","hashOfConfig":"27"},{"size":2163,"mtime":1610757168965,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1609604428529,"results":"31","hashOfConfig":"27"},{"size":3939,"mtime":1611199407626,"results":"32","hashOfConfig":"27"},{"size":11464,"mtime":1610832134142,"results":"33","hashOfConfig":"27"},{"size":5185,"mtime":1610155843395,"results":"34","hashOfConfig":"27"},{"size":1998,"mtime":1611199723566,"results":"35","hashOfConfig":"27"},{"size":1945,"mtime":1609603056394,"results":"36","hashOfConfig":"27"},{"size":1054,"mtime":1609604548623,"results":"37","hashOfConfig":"27"},{"size":303,"mtime":1609604588862,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1609604513358,"results":"39","hashOfConfig":"27"},{"size":4137,"mtime":1609732354034,"results":"40","hashOfConfig":"27"},{"size":7209,"mtime":1610779089715,"results":"41","hashOfConfig":"27"},{"size":819,"mtime":1611200078000,"results":"42","hashOfConfig":"27"},{"size":174,"mtime":1610656064764,"results":"43","hashOfConfig":"27"},{"size":5382,"mtime":1611194661801,"results":"44","hashOfConfig":"27"},{"size":243,"mtime":1610598405376,"results":"45","hashOfConfig":"27"},{"size":612,"mtime":1610823583560,"results":"46","hashOfConfig":"27"},{"size":50,"mtime":1610747323798,"results":"47","hashOfConfig":"27"},{"size":656,"mtime":1610828733735,"results":"48","hashOfConfig":"27"},{"size":584,"mtime":1610826054880,"results":"49","hashOfConfig":"27"},{"size":590,"mtime":1610826070972,"results":"50","hashOfConfig":"27"},{"size":656,"mtime":1611198863350,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1r1ti8t",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\index.js",[],["108","109"],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\campsites.js",[],["110","111"],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["112","113","114","115","116","117","118","119"]," \r\nimport React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button,  Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n           firstName: '',\r\n           lastName: '',\r\n           phoneNum: '',\r\n           email: '',\r\n           agree: false,\r\n           contactType: 'By Phone',\r\n           feedback: '',\r\n           touched: {\r\n               firstName: false,\r\n               lastName: false, \r\n               phoneNum: false,\r\n               email: false\r\n           }\r\n       };\r\n\r\n       \r\n       this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n     \r\n    handleSubmit(values) {\r\n        \r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {   \r\n\r\n    return (\r\n      <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>Contact Us</h2>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content align-items-center\">\r\n                <div className=\"col-sm-4\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        1 Nucamp Way<br />\r\n                        Seattle, WA 98001<br />\r\n                        U.S.A.\r\n                    </address>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select \r\n                                    model=\".contactType\"\r\n                                    name=\"contactType\"\r\n                                    className=\"form-control\"\r\n                                           >\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select >\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea \r\n                                    model=\".feedback\"\r\n                                    id=\"feedback\" name=\"feedback\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n<div \r\n className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h2>Contact Us </h2>\r\n </div>                   \r\n\r\nexport default Contact;","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",["120"],"import React, { Component }  from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label  } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n         super(props); \r\n         this.state = {\r\n             isNavOpen: false,\r\n             isModalOpen: false\r\n         };\r\n         this.toggleNav = this.toggleNav.bind(this);\r\n         this.toggleModal = this.toggleModal.bind(this);\r\n         this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n         isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n         isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember\r\n        : ${this.remember.checked}`);\r\n        this.toggleModal();\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h1>NuCamp</h1>\r\n                                <h2>a better way to camp</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Navbar dark sticky=\"top\" expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className= \"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"Nucamp Logo\" /> </NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                 <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                       <i className=\"fa fa-home fa-lg\" />Home\r\n                                    </NavLink> \r\n                                 </NavItem> \r\n                                 <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\r\n                                       <i className=\"fa fa-list fa-lg\" />Directory\r\n                                    </NavLink> \r\n                                 </NavItem> \r\n                                 <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                       <i className=\"fa fa-info fa-lg\" />About \r\n                                    </NavLink> \r\n                                 </NavItem> \r\n                                 <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                       <i className=\"fa fa-address-card fa-lg\" />Contact Us\r\n                                    </NavLink> \r\n                                 </NavItem> \r\n                            </Nav>\r\n                            <span className=\"navbar-text ml-auto\">\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                                </Button>\r\n                            </span>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <input type=\"text\" id=\"username\" name=\"username\" innerRef={input => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                                <input type=\"password\" id=\"password\" name=\"password\" innerRef={input => this.password = input} />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <label check>\r\n                                        <input type=\"checkbox\" name=\"remember\" innerRef={input => this.remember = input} />\r\n                                        Member me Dad?\r\n                                    </label>\r\n                                \r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["121","122","123","124","125","126","127","128"],"import React, {Component} from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle,Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors} from 'react-redux-form';\r\nimport { Loading } from'./LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nfunction RenderCampsite({campsite}){\r\n       return(\r\n        <div className=\"col-md-5 m-1\">\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    </div>\r\n       )\r\n   }\r\n   function RenderComments({comments,postComment, campsiteId}){\r\n       if(comments){\r\n           return(\r\n               <div className=\"col-md-5 md-1\">\r\n                   <h4>Comments</h4>\r\n                   <Stagger in>\r\n                   {comments.map(comment => {\r\n                       return(\r\n                           <Fade in key={comment.id}>\r\n                           <div >\r\n                               <p>{comment.text}<br />\r\n                                  {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                </p> \r\n                            </div>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                    </Stagger>\r\n                   <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n               </div>\r\n           );\r\n       }\r\n   }\r\n\r\n    function CampsiteInfo(props) {\r\n        if(props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4>{props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if(props.campsite){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <h2>{props.campsite.name}</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderCampsite campsite={props.campsite} />\r\n                        <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        campsiteId={props.campsite.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n     );\r\n   }\r\n        return (\r\n            <div>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            isModalOpen:false                                     \r\n        }\r\n    }\r\n\r\n    toggleModal =() => {\r\n\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit =(values) => {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text );\r\n       \r\n    }\r\n    render() {  \r\n        return(\r\n    <React.Fragment>\r\n\r\n    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n    <ModalBody>\r\n    <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\" \r\n                               validators={{\r\n                                    required, \r\n                                    minLength: minLength(2),\r\n                                    maxLength: maxLength(15)\r\n\r\n                                }} />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                <Control.textarea rows=\"6\" model=\".text\" id=\"text\" name=\"text\" className=\"form-control\" />\r\n                            </div>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n\r\n    </ModalBody>\r\n  </Modal>\r\n\r\n  <Button outline className=\"fa fa-pencil fa-lg\" onClick={this.toggleModal}> Submit Comment</Button>\r\n\r\n  </React.Fragment>\r\n   \r\n        )   \r\n        \r\n    }\r\n}\r\n\r\nexport default CampsiteInfo;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],["129","130"],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\meses\\OneDrive\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\redux\\promotions.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":5,"column":33,"nodeType":"139","messageId":"140","endLine":5,"endColumn":40},{"ruleId":"141","severity":1,"message":"142","line":83,"column":33,"nodeType":"143","endLine":91,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":108,"column":37,"nodeType":"143","endLine":116,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":133,"column":37,"nodeType":"143","endLine":142,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":160,"column":37,"nodeType":"143","endLine":167,"endColumn":39},{"ruleId":"141","severity":1,"message":"144","line":184,"column":45,"nodeType":"143","endLine":188,"endColumn":51},{"ruleId":"141","severity":1,"message":"145","line":194,"column":37,"nodeType":"143","endLine":198,"endColumn":45},{"ruleId":"141","severity":1,"message":"146","line":207,"column":37,"nodeType":"143","endLine":211,"endColumn":64},{"ruleId":"137","severity":1,"message":"147","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},{"ruleId":"137","severity":1,"message":"148","line":2,"column":25,"nodeType":"139","messageId":"140","endLine":2,"endColumn":39},{"ruleId":"137","severity":1,"message":"149","line":2,"column":61,"nodeType":"139","messageId":"140","endLine":2,"endColumn":70},{"ruleId":"137","severity":1,"message":"150","line":2,"column":138,"nodeType":"139","messageId":"140","endLine":2,"endColumn":142},{"ruleId":"137","severity":1,"message":"151","line":2,"column":144,"nodeType":"139","messageId":"140","endLine":2,"endColumn":153},{"ruleId":"137","severity":1,"message":"147","line":2,"column":162,"nodeType":"139","messageId":"140","endLine":2,"endColumn":167},{"ruleId":"141","severity":1,"message":"145","line":136,"column":33,"nodeType":"143","endLine":136,"endColumn":116},{"ruleId":"141","severity":1,"message":"142","line":146,"column":33,"nodeType":"143","endLine":152,"endColumn":38},{"ruleId":"141","severity":1,"message":"146","line":168,"column":33,"nodeType":"143","endLine":168,"endColumn":123},{"ruleId":"131","replacedBy":"152"},{"ruleId":"133","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Input' is defined but never used.","'CardImgOverlay' is defined but never used.","'CardTitle' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.",["154"],["155"],"no-global-assign","no-unsafe-negation"]